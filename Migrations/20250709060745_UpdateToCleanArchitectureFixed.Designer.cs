// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemInstaller.Infrastructure.Data;

#nullable disable

namespace SystemInstaller.Web.Migrations
{
    [DbContext(typeof(SystemInstallerDbContext))]
    [Migration("20250709060745_UpdateToCleanArchitectureFixed")]
    partial class UpdateToCleanArchitectureFixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SystemInstaller.Domain.Entities.Installation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EnvironmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentId");

                    b.ToTable("Installation");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.InstallationEnvironment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Environments");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.InstallationTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("EnvironmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentId");

                    b.HasIndex("InstallationId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.TenantUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "UserId")
                        .IsUnique();

                    b.ToTable("TenantUsers");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.UserInvitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvitationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvitedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InvitationToken")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("UserInvitations");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.Installation", b =>
                {
                    b.HasOne("SystemInstaller.Domain.Entities.InstallationEnvironment", "Environment")
                        .WithMany()
                        .HasForeignKey("EnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Environment");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.InstallationEnvironment", b =>
                {
                    b.HasOne("SystemInstaller.Domain.Entities.Tenant", "Tenant")
                        .WithMany("Environments")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.InstallationTask", b =>
                {
                    b.HasOne("SystemInstaller.Domain.Entities.InstallationEnvironment", "Environment")
                        .WithMany("Tasks")
                        .HasForeignKey("EnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemInstaller.Domain.Entities.Installation", "Installation")
                        .WithMany("Tasks")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Environment");

                    b.Navigation("Installation");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.Tenant", b =>
                {
                    b.OwnsOne("SystemInstaller.Domain.ValueObjects.Email", "ContactEmail", b1 =>
                        {
                            b1.Property<Guid>("TenantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("ContactEmail");

                            b1.HasKey("TenantId");

                            b1.ToTable("Tenants");

                            b1.WithOwner()
                                .HasForeignKey("TenantId");
                        });

                    b.Navigation("ContactEmail")
                        .IsRequired();
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.TenantUser", b =>
                {
                    b.HasOne("SystemInstaller.Domain.Entities.Tenant", "Tenant")
                        .WithMany("TenantUsers")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SystemInstaller.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("TenantUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Email");

                            b1.HasKey("TenantUserId");

                            b1.ToTable("TenantUsers");

                            b1.WithOwner()
                                .HasForeignKey("TenantUserId");
                        });

                    b.OwnsOne("SystemInstaller.Domain.ValueObjects.PersonName", "Name", b1 =>
                        {
                            b1.Property<Guid>("TenantUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LastName");

                            b1.HasKey("TenantUserId");

                            b1.ToTable("TenantUsers");

                            b1.WithOwner()
                                .HasForeignKey("TenantUserId");
                        });

                    b.OwnsOne("SystemInstaller.Domain.ValueObjects.UserRole", "Role", b1 =>
                        {
                            b1.Property<Guid>("TenantUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Role");

                            b1.HasKey("TenantUserId");

                            b1.ToTable("TenantUsers");

                            b1.WithOwner()
                                .HasForeignKey("TenantUserId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Role")
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.UserInvitation", b =>
                {
                    b.HasOne("SystemInstaller.Domain.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SystemInstaller.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserInvitationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Email");

                            b1.HasKey("UserInvitationId");

                            b1.ToTable("UserInvitations");

                            b1.WithOwner()
                                .HasForeignKey("UserInvitationId");
                        });

                    b.OwnsOne("SystemInstaller.Domain.ValueObjects.PersonName", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserInvitationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LastName");

                            b1.HasKey("UserInvitationId");

                            b1.ToTable("UserInvitations");

                            b1.WithOwner()
                                .HasForeignKey("UserInvitationId");
                        });

                    b.OwnsOne("SystemInstaller.Domain.ValueObjects.UserRole", "Role", b1 =>
                        {
                            b1.Property<Guid>("UserInvitationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Role");

                            b1.HasKey("UserInvitationId");

                            b1.ToTable("UserInvitations");

                            b1.WithOwner()
                                .HasForeignKey("UserInvitationId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Role")
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.Installation", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.InstallationEnvironment", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("SystemInstaller.Domain.Entities.Tenant", b =>
                {
                    b.Navigation("Environments");

                    b.Navigation("TenantUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
